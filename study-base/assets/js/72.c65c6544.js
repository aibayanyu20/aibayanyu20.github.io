(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{269:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"数据库事务操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库事务操作"}},[t._v("#")]),t._v(" 数据库事务操作")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("MySQL中的事务主要用于处理容易出现错误的数据")])]),t._v(" "),a("li",[a("p",[t._v("事务可以用来维护维护数据的完整性，保证成批的SQL语句要么全部执行，要么全部不执行")])]),t._v(" "),a("li",[a("p",[t._v("事务用来管理 insert，update,delete语句")])]),t._v(" "),a("li",[a("p",[t._v("MySQL中只有使用了Innodb数据库引擎的表才支持事务")])])]),t._v(" "),a("h2",{attrs:{id:"事务语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务语法"}},[t._v("#")]),t._v(" 事务语法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("开启事务："),a("code",[t._v("start transaction")])])]),t._v(" "),a("li",[a("p",[t._v("提交事务: "),a("code",[t._v("commit")])])]),t._v(" "),a("li",[a("p",[t._v("回滚事务: "),a("code",[t._v("rollback")])])])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意点:")]),t._v(" "),a("p",[t._v("事务的本质是开启事务的时候，拷贝一张一模一样的表，然后执行相关的操作都是在拷贝的这张表中操作。\n如果失败了，如果执行了rollback，那么系统就会自动删除拷贝的这张表，\n如果成功了且执行了commit，那么系统就会自动利用拷贝表中最新的数据覆盖原有表中的数据。\n所以成功了会影响到原有的数据")])]),t._v(" "),a("h2",{attrs:{id:"事务回滚点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务回滚点"}},[t._v("#")]),t._v(" 事务回滚点")]),t._v(" "),a("p",[t._v("savepoint 回滚点名称")]),t._v(" "),a("p",[t._v("rollback to 回滚点名称")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("start")]),t._v(" transcation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" bank "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1003'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2222'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("savepoint")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" bank "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1003'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2222'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("savepoint")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" bank "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1003'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2222'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("savepoint")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" bank "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1003'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2222'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rollback")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#混滚到c的位置c下面的数据就被删除")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("commit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#不提交数据不会更新")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"事务的特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务的特点"}},[t._v("#")]),t._v(" 事务的特点")]),t._v(" "),a("p",[t._v("1.原子性（关注的是状态）")]),t._v(" "),a("p",[t._v("事务开启后所有的操作，要么全成功，要么全失败，不可能出现部分成功的情况，\n事务执行过程中如果出错，哪怕我们不手动回滚，系统也会帮助我们回滚。")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("一致性（关注数据可见性）")])]),t._v(" "),a("p",[t._v("事务开始前和结束后，数据库的完整性约束没有被破坏。")]),t._v(" "),a("p",[t._v("例如：A向B转账，不可能A扣钱了，B却没收到")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("持久性：")])]),t._v(" "),a("p",[t._v("事务完成后，事务对数据的所有操作都是永久的，操作完成之后就不能再回滚")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("隔离性：")])]),t._v(" "),a("p",[t._v("数据库允许多个并发事务同时对其数据进行读写和修改能力，\n隔离性防止多个事务并发执行时由于交叉执行而导致数据的不一致。")]),t._v(" "),a("h3",{attrs:{id:"事务隔离级别："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务隔离级别："}},[t._v("#")]),t._v(" 事务隔离级别：")]),t._v(" "),a("ol",[a("li",[t._v("读未提交（read uncommitted） : 一个事务可以读取另一个未提交事务的数据")])]),t._v(" "),a("ul",[a("li",[t._v("脏读 ：能读取到其他事务没有提交的数据")]),t._v(" "),a("li",[t._v("解决办法：把事务的级别改为读提交")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("读提交 (read committed) : 一个事务要等另一个事务提交后才能读取数据")])]),t._v(" "),a("ul",[a("li",[t._v("不可重复读：一个事务范围内多次查询结果不同")]),t._v(" "),a("li",[t._v("解决办法：把事务的级别改为可重复读")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("可重复读 (repeatable read) : 一个事务范围内多个相同的查询返回相同的结果")])]),t._v(" "),a("ul",[a("li",[t._v("幻读：读取的结果不是最终的结果")]),t._v(" "),a("li",[t._v("解决办法：把事务级别改为串行化")])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("串行化 (serializable) : 前面一个事务没有执行完成后面一个事务不能执行")])]),t._v(" "),a("p",[t._v("不会出现 脏读、幻读、不可重复读的问题但是性能稍微差一点")]),t._v(" "),a("ul",[a("li",[t._v("查看隔离级别：\n"),a("ul",[a("li",[t._v("全局级别： select @@global.transaction_isolation;")]),t._v(" "),a("li",[t._v("当前会话的：select @@transaction_isolation;")])])]),t._v(" "),a("li",[t._v("设置隔离级别：\n"),a("ul",[a("li",[t._v("全局设置：set global transaction isolation level 级别名称;")]),t._v(" "),a("li",[t._v("当前会话：set session transaction isolation level 级别名称;")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);