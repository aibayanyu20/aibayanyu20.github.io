(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{265:function(a,t,v){"use strict";v.r(t);var _=v(6),s=Object(_.a)({},(function(){var a=this,t=a.$createElement,v=a._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h1",{attrs:{id:"数据库学习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据库学习"}},[a._v("#")]),a._v(" 数据库学习")]),a._v(" "),v("h2",{attrs:{id:"关系型数据库与非关系型数据库"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#关系型数据库与非关系型数据库"}},[a._v("#")]),a._v(" 关系型数据库与非关系型数据库")]),a._v(" "),v("h3",{attrs:{id:"关系型数据库"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#关系型数据库"}},[a._v("#")]),a._v(" 关系型数据库")]),a._v(" "),v("h4",{attrs:{id:"什么是关系型数据库"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是关系型数据库"}},[a._v("#")]),a._v(" 什么是关系型数据库")]),a._v(" "),v("ol",[v("li",[a._v("关系型数据库，是指采用了关系模型来组织数据的数据库；")]),a._v(" "),v("li",[a._v("关系型数据库的最大特点就是事务的一致性；")]),a._v(" "),v("li",[a._v("简单来说，关系模型指的就是二维表格模型，而一个关系型数据库就是由二维表及其之间的联系所组成的一个数据组织。")])]),a._v(" "),v("h4",{attrs:{id:"关系型数据的优势"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#关系型数据的优势"}},[a._v("#")]),a._v(" 关系型数据的优势")]),a._v(" "),v("ol",[v("li",[a._v("容易理解：二维表结构是非常贴近逻辑世界一个概念，关系模型相对网状、层次等其他模型来说更容易理解；")]),a._v(" "),v("li",[a._v("使用方便：通用的SQL语言使得操作关系型数据库非常方便；")]),a._v(" "),v("li",[a._v("易于维护：丰富的完整性(实体完整性、参照完整性和用户定义的完整性)大大减低了数据冗余和数据不一致的概率；")]),a._v(" "),v("li",[a._v("支持SQL，可用于复杂的查询。")])]),a._v(" "),v("h4",{attrs:{id:"关系型数据的缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#关系型数据的缺点"}},[a._v("#")]),a._v(" 关系型数据的缺点")]),a._v(" "),v("ol",[v("li",[a._v("为了维护一致性所付出的巨大代价就是其读写性能比较差；")]),a._v(" "),v("li",[a._v("固定的表结构；")]),a._v(" "),v("li",[a._v("高并发读写需求；")]),a._v(" "),v("li",[a._v("海量数据的高效率读写；")])]),a._v(" "),v("h4",{attrs:{id:"常用的关系型数据库"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常用的关系型数据库"}},[a._v("#")]),a._v(" 常用的关系型数据库")]),a._v(" "),v("p",[a._v("SQLite、Oracle、MySQL")]),a._v(" "),v("h3",{attrs:{id:"非关系型数据库"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#非关系型数据库"}},[a._v("#")]),a._v(" 非关系型数据库")]),a._v(" "),v("h4",{attrs:{id:"什么是非关系型数据库"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是非关系型数据库"}},[a._v("#")]),a._v(" 什么是非关系型数据库")]),a._v(" "),v("ol",[v("li",[a._v("使用键值对存储数据；")]),a._v(" "),v("li",[a._v("分布式；")]),a._v(" "),v("li",[a._v("一般不支持ACID特性；")]),a._v(" "),v("li",[a._v("非关系型数据库严格上不是一种数据库，应该是一种数据结构化存储方法的集合。")])]),a._v(" "),v("h4",{attrs:{id:"非关系型数据的优势"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#非关系型数据的优势"}},[a._v("#")]),a._v(" 非关系型数据的优势")]),a._v(" "),v("ol",[v("li",[a._v("无需经过sql层的解析，读写性能很高；")]),a._v(" "),v("li",[a._v("基于键值对，数据没有耦合性，容易扩展；")]),a._v(" "),v("li",[a._v("存储数据的格式：nosql的存储格式是key,value形式、文档形式、图片形式等等，文档形式、图片形式等等，而关系型数据库则只支持基础类型。")])]),a._v(" "),v("h4",{attrs:{id:"非关系型数据的缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#非关系型数据的缺点"}},[a._v("#")]),a._v(" 非关系型数据的缺点")]),a._v(" "),v("ol",[v("li",[a._v("不提供sql支持，学习和使用成本较高；")]),a._v(" "),v("li",[a._v("无事务处理，附加功能bi和报表等支持也不好；")])]),a._v(" "),v("h4",{attrs:{id:"常用的非关系型数据库"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常用的非关系型数据库"}},[a._v("#")]),a._v(" 常用的非关系型数据库")]),a._v(" "),v("p",[a._v("MongoDb、redis、HBase")])])}),[],!1,null,null,null);t.default=s.exports}}]);