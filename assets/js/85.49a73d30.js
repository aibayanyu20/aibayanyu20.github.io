(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{281:function(v,_,e){"use strict";e.r(_);var a=e(6),t=Object(a.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"redis-api操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis-api操作"}},[v._v("#")]),v._v(" Redis-Api操作")]),v._v(" "),e("p",[v._v("默认情况下Redis给我们创建16个数据库，如果默认不指定数据库默认使用第0个数据，\n切换数据库的命令"),e("code",[v._v("select index")]),v._v(" index为切换数据库的索引0~15")]),v._v(" "),e("h2",{attrs:{id:"字符串操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符串操作"}},[v._v("#")]),v._v(" 字符串操作")]),v._v(" "),e("h3",{attrs:{id:"增"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#增"}},[v._v("#")]),v._v(" 增")]),v._v(" "),e("p",[v._v("set key value")]),v._v(" "),e("h3",{attrs:{id:"改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#改"}},[v._v("#")]),v._v(" 改")]),v._v(" "),e("p",[v._v("set key value")]),v._v(" "),e("p",[v._v("如果当前的key已经存在就是修改")]),v._v(" "),e("h3",{attrs:{id:"查"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查"}},[v._v("#")]),v._v(" 查")]),v._v(" "),e("p",[v._v("get key")]),v._v(" "),e("h3",{attrs:{id:"删"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删"}},[v._v("#")]),v._v(" 删")]),v._v(" "),e("p",[v._v("del key")]),v._v(" "),e("p",[v._v("删除为通用操作")]),v._v(" "),e("h3",{attrs:{id:"高级操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#高级操作"}},[v._v("#")]),v._v(" 高级操作")]),v._v(" "),e("ol",[e("li",[v._v("setnx")])]),v._v(" "),e("p",[v._v("setnx key value")]),v._v(" "),e("p",[v._v("如果指定的key值存在，就不新增，不存在就新增")]),v._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[v._v("参数xx")])]),v._v(" "),e("p",[v._v("set key value xx")]),v._v(" "),e("p",[v._v("key值是否存在，存在就修改，不存在就不操作")]),v._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[v._v("mset 多key-value操作(批量)")])]),v._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[v._v("\nmset name "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[v._v("test")]),v._v(" age "),e("span",{pre:!0,attrs:{class:"token number"}},[v._v("66")]),v._v(" gender "),e("span",{pre:!0,attrs:{class:"token function"}},[v._v("man")]),v._v("\n\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[v._v("mget 多值获取（批量）")])]),v._v(" "),e("p",[v._v("mget name age gender")]),v._v(" "),e("ol",{attrs:{start:"5"}},[e("li",[v._v("设置新值返回旧值")])]),v._v(" "),e("p",[v._v("getset key newValue")]),v._v(" "),e("p",[v._v("返回旧的值并设置为新的值")]),v._v(" "),e("ol",{attrs:{start:"6"}},[e("li",[v._v("append 追加值")])]),v._v(" "),e("p",[v._v("append key value")]),v._v(" "),e("p",[v._v("往已存在的key中追加值")]),v._v(" "),e("ol",{attrs:{start:"7"}},[e("li",[v._v("strlen 字符串长度统计")])]),v._v(" "),e("p",[v._v("strlen key")]),v._v(" "),e("ol",{attrs:{start:"8"}},[e("li",[v._v("getrange")])]),v._v(" "),e("p",[v._v("getrange key start end")]),v._v(" "),e("p",[v._v("获取字符串的指定长度")]),v._v(" "),e("ol",{attrs:{start:"9"}},[e("li",[v._v("setrange")])]),v._v(" "),e("p",[v._v("setrange key offset value")]),v._v(" "),e("p",[v._v("从指定位置开始修改值")]),v._v(" "),e("ol",{attrs:{start:"10"}},[e("li",[v._v("incr")])]),v._v(" "),e("p",[v._v("incr key")]),v._v(" "),e("p",[v._v("给指定的key对应的vlaue自增1，如果key不存在会自动新增，并从0开始自增1")]),v._v(" "),e("ol",{attrs:{start:"11"}},[e("li",[v._v("decr")])]),v._v(" "),e("p",[v._v("decr key")]),v._v(" "),e("p",[v._v("给指定的key对应的value自减1，如果key不存在就会自动新增，并从0开始自减1")]),v._v(" "),e("ol",{attrs:{start:"12"}},[e("li",[v._v("incrby")])]),v._v(" "),e("p",[v._v("incrby key number")]),v._v(" "),e("p",[v._v("指定自增的的数值")]),v._v(" "),e("ol",{attrs:{start:"13"}},[e("li",[v._v("decrby")])]),v._v(" "),e("p",[v._v("decrby key number")]),v._v(" "),e("p",[v._v("指定自减的数值")]),v._v(" "),e("ol",{attrs:{start:"14"}},[e("li",[v._v("incrybyfloat")])]),v._v(" "),e("p",[v._v("incrbyfloat key floatNumber")]),v._v(" "),e("p",[v._v("小数方式递增（正数）递减（负数）")]),v._v(" "),e("h2",{attrs:{id:"通用操作符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通用操作符"}},[v._v("#")]),v._v(" 通用操作符")]),v._v(" "),e("ul",[e("li",[v._v("查询当前数据库中所有的key")])]),v._v(" "),e("p",[e("code",[v._v("keys *")])]),v._v(" "),e("ul",[e("li",[v._v("清空当前数据库")])]),v._v(" "),e("p",[e("code",[v._v("flushdb")])]),v._v(" "),e("ul",[e("li",[v._v("清空所有数据库（清空所有数据库）")])]),v._v(" "),e("p",[e("code",[v._v("flushall")])]),v._v(" "),e("p",[e("strong",[v._v("由于Redis是单线程的，以上操作都是非常耗时的操作，所以起亚开发中不推荐使用")])]),v._v(" "),e("ul",[e("li",[v._v("计算当前数据库中有多少key")])]),v._v(" "),e("p",[e("code",[v._v("dbsize")])]),v._v(" "),e("p",[v._v("dbsize并不是遍历统计得到当前数据库key的总数，而是每次操作时，内部会自动统计，\n所以dbsize并不是一个耗时的操作，我们可以在企业开发中大胆的去使用")]),v._v(" "),e("ul",[e("li",[v._v("查看value数据类型")])]),v._v(" "),e("p",[e("code",[v._v("type key")])]),v._v(" "),e("ul",[e("li",[v._v("判断指定key是否存在")])]),v._v(" "),e("p",[e("code",[v._v("exists key")])]),v._v(" "),e("p",[v._v("存在返回1 不存在返回0")]),v._v(" "),e("ul",[e("li",[v._v("设置过期时间")])]),v._v(" "),e("p",[e("code",[v._v("expire key seconds")])]),v._v(" "),e("p",[v._v("如果有过期时间，就更新过期时间，没有则创建一个过期时间")]),v._v(" "),e("ul",[e("li",[v._v("查看过期时间")])]),v._v(" "),e("p",[e("code",[v._v("ttl key")])]),v._v(" "),e("ul",[e("li",[v._v("取消过期时间")])]),v._v(" "),e("p",[e("code",[v._v("persist key")])]),v._v(" "),e("p",[v._v("返回-1就没有过期时间，key不存在或者已被删除返回-2 同ttl")]),v._v(" "),e("h2",{attrs:{id:"hash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hash"}},[v._v("#")]),v._v(" Hash")]),v._v(" "),e("h3",{attrs:{id:"增-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#增-2"}},[v._v("#")]),v._v(" 增")]),v._v(" "),e("p",[v._v("hset key field value")]),v._v(" "),e("h3",{attrs:{id:"查-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查-2"}},[v._v("#")]),v._v(" 查")]),v._v(" "),e("p",[v._v("hget key field")]),v._v(" "),e("h3",{attrs:{id:"改-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#改-2"}},[v._v("#")]),v._v(" 改")]),v._v(" "),e("p",[v._v("hset key filed value")]),v._v(" "),e("p",[v._v("存在就修改，不存在就新增")]),v._v(" "),e("h3",{attrs:{id:"删-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删-2"}},[v._v("#")]),v._v(" 删")]),v._v(" "),e("p",[v._v("hdel key field")]),v._v(" "),e("p",[v._v("返回1代表删除成功")]),v._v(" "),e("p",[v._v("del key")]),v._v(" "),e("p",[v._v("删除整个hash对象")]),v._v(" "),e("h3",{attrs:{id:"高级操作-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#高级操作-2"}},[v._v("#")]),v._v(" 高级操作")]),v._v(" "),e("ol",[e("li",[v._v("批量新增")])]),v._v(" "),e("p",[v._v("hmset key field1 value1 field2 value2 ... ...")]),v._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[v._v("批量查询")])]),v._v(" "),e("p",[v._v("hmget key field1 field2")]),v._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[v._v("工具指令")])]),v._v(" "),e("p",[v._v("hlen key 返回key储存的hash表中有多少条数据")]),v._v(" "),e("p",[v._v("hexists key field 判断指定的key存储的Hash中是否有指定字段")]),v._v(" "),e("p",[v._v("0代表不存在1代表存在")]),v._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[v._v("查询所有的field")])]),v._v(" "),e("p",[v._v("hkeys key")]),v._v(" "),e("p",[v._v("获取指定key保存的所有字段")]),v._v(" "),e("p",[v._v("hvals key")]),v._v(" "),e("p",[v._v("获取指定key保存的所有的值")]),v._v(" "),e("p",[v._v("hgetall key")]),v._v(" "),e("p",[v._v("获取指定的key和值")]),v._v(" "),e("p",[v._v("以上操作是非常耗时的操作，不推荐使用，容易阻塞单线程")]),v._v(" "),e("h2",{attrs:{id:"list"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[v._v("#")]),v._v(" List")]),v._v(" "),e("p",[v._v("Redis的Value除了可以存储字符串和Hash类型以外，还可以存储List类型\nList类型就相当于JavaScript中的数组，可以把整个数组当做一个Value存储起来")]),v._v(" "),e("p",[v._v("List是有序的")]),v._v(" "),e("h3",{attrs:{id:"增-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#增-3"}},[v._v("#")]),v._v(" 增")]),v._v(" "),e("ul",[e("li",[v._v("从第二个Value开始添加到前一个的左边\n"),e("ul",[e("li",[v._v("lpush key value1 value2 value3")]),v._v(" "),e("li",[v._v("例如：lpush arr1 aa bb cc -> cc bb aa")])])]),v._v(" "),e("li",[v._v("从第二个Value开始添加到前一个的右边\n"),e("ul",[e("li",[v._v("rpush key value1 value2 value3")]),v._v(" "),e("li",[v._v("例如：rpush arr1 aa bb cc -> aa bb cc")])])])]),v._v(" "),e("h3",{attrs:{id:"查-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查-3"}},[v._v("#")]),v._v(" 查")]),v._v(" "),e("ul",[e("li",[v._v("查询指定范围\n"),e("ul",[e("li",[v._v("lrange key startIndex endIndex")]),v._v(" "),e("li",[v._v("索引从0开始，endIndex等于-1表示取到最后")])])]),v._v(" "),e("li",[v._v("查询指定索引数据\n"),e("ul",[e("li",[v._v("lindex key index")]),v._v(" "),e("li",[v._v("从前往后索引从0开始，从后往前索引从-1开始")])])])]),v._v(" "),e("h3",{attrs:{id:"修"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修"}},[v._v("#")]),v._v(" 修")]),v._v(" "),e("p",[v._v("lset key index value")]),v._v(" "),e("p",[v._v("注意index从0开始")]),v._v(" "),e("h3",{attrs:{id:"删-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删-3"}},[v._v("#")]),v._v(" 删")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("lpop key # 删除最左边的一个元素")])]),v._v(" "),e("li",[e("p",[v._v("rpop key # 删除最右边一个元素")])]),v._v(" "),e("li",[e("p",[v._v("lrem删除指定个数的指定元素")])])]),v._v(" "),e("p",[v._v("lrem key count value")]),v._v(" "),e("p",[v._v("count: 为负数从右边向左边查找")]),v._v(" "),e("p",[v._v("count: 为正数从左边向右边查找")]),v._v(" "),e("p",[v._v("count: 为0会删除所有的value值")]),v._v(" "),e("p",[v._v("value: 要删除的值")]),v._v(" "),e("p",[v._v("ltrim key start end")]),v._v(" "),e("p",[v._v("start 为开始剪切的索引")]),v._v(" "),e("p",[v._v("end 为剪切结束的索引")]),v._v(" "),e("h3",{attrs:{id:"其他操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他操作"}},[v._v("#")]),v._v(" 其他操作")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("在某个值的前面插入新的值\nlinsert key before 在哪个值的前面插入值 value")])]),v._v(" "),e("li",[e("p",[v._v("在某个值的后面插入新的值\nlinsert key after 在哪个值的后面插入值 value")])]),v._v(" "),e("li",[e("p",[v._v("获取列表长度\nllen key")])])]),v._v(" "),e("h3",{attrs:{id:"应用场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[v._v("#")]),v._v(" 应用场景")]),v._v(" "),e("p",[v._v("列表实现简单的数据结构")]),v._v(" "),e("ul",[e("li",[v._v("栈结构（水桶） - 先进后出")])]),v._v(" "),e("p",[v._v("lpush + lpop")]),v._v(" "),e("ul",[e("li",[v._v("队列结构（水管） - 先进先出")])]),v._v(" "),e("p",[v._v("lpush + rpop")]),v._v(" "),e("p",[v._v("所以在企业开发中，如果需要先进后出或者先进先出的数据，我们就可以将这些数据存储到Redis的列表中")]),v._v(" "),e("h2",{attrs:{id:"set集合操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set集合操作"}},[v._v("#")]),v._v(" Set集合操作")]),v._v(" "),e("p",[v._v("集合就是一堆无序的数据，Redis可以报一堆无序的数据当做Value存储起来")]),v._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[v._v("注意点")]),v._v(" "),e("p",[v._v("集合中不能出现重复的数据")])]),v._v(" "),e("h3",{attrs:{id:"增-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#增-4"}},[v._v("#")]),v._v(" 增")]),v._v(" "),e("p",[v._v("sadd key value1 value2 value3 ...")]),v._v(" "),e("h3",{attrs:{id:"查-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查-4"}},[v._v("#")]),v._v(" 查")]),v._v(" "),e("p",[v._v("smembers key")]),v._v(" "),e("p",[v._v("取出的数据是无序的")]),v._v(" "),e("p",[e("code",[v._v("srandmember key [count]")])]),v._v(" "),e("p",[v._v("count:随机取出n个数据")]),v._v(" "),e("h3",{attrs:{id:"删-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删-4"}},[v._v("#")]),v._v(" 删")]),v._v(" "),e("p",[e("code",[v._v("spop key [count]")])]),v._v(" "),e("p",[v._v("count 随机删除n个数据")]),v._v(" "),e("p",[v._v("指定删除数据")]),v._v(" "),e("p",[e("code",[v._v("srem key value")])]),v._v(" "),e("h3",{attrs:{id:"修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改"}},[v._v("#")]),v._v(" 修改")]),v._v(" "),e("p",[v._v("因为数据是无序的无法进行修改数据")]),v._v(" "),e("h3",{attrs:{id:"其他操作-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他操作-2"}},[v._v("#")]),v._v(" 其他操作")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("追加元素")]),v._v(" "),e("ul",[e("li",[v._v("sadd:key不存在就新增，存在就追加数据")])])]),v._v(" "),e("li",[e("p",[v._v("统计集合中的元素个数")])])]),v._v(" "),e("p",[v._v("scard key")]),v._v(" "),e("ul",[e("li",[v._v("判断某个元素是否存在")])]),v._v(" "),e("p",[v._v("sismember key value")]),v._v(" "),e("p",[v._v("返回0为不存在1为已存在")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("集合中支持交集，并集和差集")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("交集\nsinter key1 key2")])]),v._v(" "),e("li",[e("p",[v._v("并集\nsunion key1 key2")])]),v._v(" "),e("li",[e("p",[v._v("差集\nsdiff  key1 key2")]),v._v(" "),e("p",[v._v("谁在前面就求谁的差集")])])])])]),v._v(" "),e("h3",{attrs:{id:"应用场景-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#应用场景-2"}},[v._v("#")]),v._v(" 应用场景")]),v._v(" "),e("ul",[e("li",[v._v("抽奖\n"),e("ul",[e("li",[e("code",[v._v("srandmember key [count]")])])])]),v._v(" "),e("li",[v._v("绑定标签\n"),e("ul",[e("li",[e("code",[v._v("sadd key val1 val2")])])])]),v._v(" "),e("li",[v._v("社交关系\n"),e("ul",[e("li",[v._v("交集")]),v._v(" "),e("li",[v._v("并集")]),v._v(" "),e("li",[v._v("差集")])])])]),v._v(" "),e("h2",{attrs:{id:"有序集合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#有序集合"}},[v._v("#")]),v._v(" 有序集合")]),v._v(" "),e("p",[v._v("ZSet是有序集合，Redis可以把一堆通过权重排序的数据当做一个Value存储起来")]),v._v(" "),e("h3",{attrs:{id:"增-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#增-5"}},[v._v("#")]),v._v(" 增")]),v._v(" "),e("p",[v._v("zadd key 权重1 value1 权重2 value2")]),v._v(" "),e("h3",{attrs:{id:"查-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查-5"}},[v._v("#")]),v._v(" 查")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("查询排名数据从小到大\nzrange key start end")])]),v._v(" "),e("li",[e("p",[v._v("按照权重范围内的数据")])])]),v._v(" "),e("p",[v._v("zrangebyscore key min max")]),v._v(" "),e("ul",[e("li",[v._v("查询权重")])]),v._v(" "),e("p",[v._v("zscore key val")]),v._v(" "),e("ul",[e("li",[v._v("查询权重范围内的个数")])]),v._v(" "),e("p",[v._v("zcount key min max")]),v._v(" "),e("h3",{attrs:{id:"删-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删-5"}},[v._v("#")]),v._v(" 删")]),v._v(" "),e("p",[v._v("zrem key value")]),v._v(" "),e("p",[v._v("zremrangebyrank key 排名1 排名2")]),v._v(" "),e("p",[v._v("zremrangebyscore key 权重1min 权重2max")]),v._v(" "),e("h3",{attrs:{id:"其他操作-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他操作-3"}},[v._v("#")]),v._v(" 其他操作")]),v._v(" "),e("ul",[e("li",[v._v("增加或减少元素权重\n"),e("ul",[e("li",[v._v("zincrby key score element\nscore为正数就是增加权重为负数就是减少权重")])])]),v._v(" "),e("li",[v._v("从高到低的操作\n"),e("ul",[e("li",[v._v("zrevrange key start end")])])])]),v._v(" "),e("p",[v._v("应用场景：\n存储排行榜数据")]),v._v(" "),e("h2",{attrs:{id:"发布订阅"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发布订阅"}},[v._v("#")]),v._v(" 发布订阅")]),v._v(" "),e("p",[v._v("在发布订阅中有三个角色：发布者(publisher)/订阅者(subscriber)/频道(channel)，\n只要发布者将消息发送至对应的频道中，那么所有的订阅者都能收到这个消息，这个就是Redis的发布订阅")]),v._v(" "),e("p",[v._v("列举现实生活中的发布订阅：")]),v._v(" "),e("p",[v._v("'张三和李四'去'商店'买鞋，但是最近炒鞋的人比较多，所以鞋子已经卖完了，\n于是商店老板就让张三和李四先加粉丝群，到货了就会在群里通知")]),v._v(" "),e("p",[v._v("这里的商店老板是发布者")]),v._v(" "),e("p",[v._v("粉丝圈为频道")]),v._v(" "),e("p",[v._v("张三李四为订阅者")]),v._v(" "),e("p",[v._v("只要张三和李四加了粉丝群，老板在群里发送消息，张三和李四就能收到老板的消息")]),v._v(" "),e("h3",{attrs:{id:"订阅频道"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#订阅频道"}},[v._v("#")]),v._v(" 订阅频道")]),v._v(" "),e("ul",[e("li",[v._v("subscribe channel ... ...")])]),v._v(" "),e("h3",{attrs:{id:"发布消息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发布消息"}},[v._v("#")]),v._v(" 发布消息")]),v._v(" "),e("ul",[e("li",[v._v("publish channel message")])]),v._v(" "),e("h3",{attrs:{id:"退订频道"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#退订频道"}},[v._v("#")]),v._v(" 退订频道")]),v._v(" "),e("ul",[e("li",[v._v("unsubscribe channel ... ...")])])])}),[],!1,null,null,null);_.default=t.exports}}]);